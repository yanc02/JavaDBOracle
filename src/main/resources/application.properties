server.port=8085 

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/XE
spring.datasource.username=yancarlos
spring.datasource.password=123456

#Properties for Oracle connection using Java config
oracle.username=yan
oracle.password=123456
oracle.url=jdbc:oracle:thin:@//localhost:1521/XE

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
##spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy



# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect